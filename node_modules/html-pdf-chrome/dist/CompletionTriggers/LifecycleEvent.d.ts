import * as CDP from 'chrome-remote-interface';
import { CompletionTrigger } from './CompletionTrigger';
/**
 * Waits for a Chrome page lifecycle event.
 * Some examples include:
 *  - init
 *  - DOMContentLoaded
 *  - load
 *  - firstPaint
 *  - firstContentfulPaint
 *  - firstMeaningfulPaintCandidate
 *  - networkAlmostIdle
 *  - firstMeaningfulPaint
 *  - networkIdle
 *
 * @export
 * @class LifecycleEvent
 * @extends {CompletionTrigger}
 */
export declare class LifecycleEvent extends CompletionTrigger {
    #private;
    protected eventName?: string;
    /**
     * Creates an instance of the LifecycleEvent CompletionTrigger.
     * @param {string} [eventName] the name of the event to listen for.
     *  Defaults to `firstMeaningfulPaint`.
     * @param {number} [timeout] ms to wait until timing out.
     * @memberof LifecycleEvent
     */
    constructor(eventName?: string, timeout?: number);
    init(client: CDP.Client): Promise<void>;
    wait(_client: CDP.Client): Promise<void>;
}
